
(pragma scheme-translator
  (inline
    (import record-variants)))

;; Alias for builtin (list ...) function
(pragma prolog
  (ensure-loaded "prolog-std.scm")
  (predicate (result-of (oslops:list . Ts) (list T)) (all T Ts)))
(pragma scheme-translator
  (inline (define oslops:list list)))


;; Void and values
(pragma prolog
  (predicate (result-of (void) void))
  (predicate (result-of (values . Ts) . Ts)))

;; Meta assertion
(pragma prolog
  (predicate (result-of (assert_thunk Thunk) Result)
    (if (result-of (Thunk) _)
        (= Result assertion_success)
        (= Result assertion_failure))))
(pragma scheme-translator
  (inline
    (define (assert_thunk x) x)))

(pragma scheme-translator
  (inline
    (import iterators)))
